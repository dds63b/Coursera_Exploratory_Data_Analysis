object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plamts)
tail(plants)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
quit()
install.packages('httr')
library(httr)
install.packages('jsonlite')
myapi<- oauth_app("github","f312a50f7cdc7f34475a", secret="0421a88d3abfa3915522bb65a9c17b5772e14a61")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapi)
install.packages('httpuv')
github_token <- oauth2.0_token(oauth_endpoints("github"), myapi)
request1 <- get("https://api.github.com/users/jtleek/repos", config(token = github_token))
request1 <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
myjson <- content(request1)
myjson2 <- jsonlite::fromJSON(toJSON(myjson))
library(jsonlite)
myjson2 <- jsonlite::fromJSON(toJSON(myjson))
view(myjson2)
library(httpuv)
view(myjson2)
library('httpuv')
view(myjson2)
myjson2
request1 <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
myjson <- content(request1)
myjson2 <- jsonlite::fromJSON(toJSON(myjson))
myjson2
github_token <- oauth2.0_token(oauth_endpoints("github"), myapi)
request1 <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
myapi<- oauth_app("github","f312a50f7cdc7f34475a", secret="0421a88d3abfa3915522bb65a9c17b5772e14a61")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapi)
request1 <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
myjson <- content(request1)
myjson2 <- jsonlite::fromJSON(toJSON(myjson))
myjson2
myapp = oauth_app("github", client_id="f312a50f7cdc7f34475a", client_secret="0421a88d3abfa3915522bb65a9c17b5772e14a61")
myapp = oauth_app("github", key="f312a50f7cdc7f34475a", secret="0421a88d3abfa3915522bb65a9c17b5772e14a61")
sig = sign_oauth2.0(myapp, token="96a04f3019c2fda0b720cbde0d5ca66b3ae67b0d")
sig = sign_oauth2.0(myapp, token_secret="96a04f3019c2fda0b720cbde0d5ca66b3ae67b0d")
quit()
library(httr)
require(httpuv)
require(jsonlite)
myapp <- oauth_app("quiz2", "4cd78bad916f45e6749e", secret="968301fca2e6c60052698f17e4ad7e902d89226a")
oauth_endpoints("github")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/users/jtleek/repos", config(token=github_token))
stop_for_status(req)
output<- content(req)
output
list(output[[4]]$name, output[[4]]$created_at)
connection <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLines(connection)
close(connection)
c(nchar(htmlCode[10]), nchar(htmlCode[20]), nchar(htmlCode[30]), nchar(htmlCode[100]))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
lines <- readLines(url, n=10)
lines <- readLines(url)
data <- read.csv(url, header = TRUE)
data <- read.csv(url, header = TRUE, method=CURL)
quit()
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url, method="CURL")
getwd
getwd()
download.file(url, week3question1.csv, method="CURL")
download.file(url, file=week3question1.csv, method="CURL")
?download.file
download.file(url, "week3question1.csv", method="CURL")
download.file(url, destfile="week3question1.csv", method="CURL")
download.file(url, "week3question1.csv", method="curl")
read.csv("week3question1.csv")
ds<-read.csv("week3question1.csv")
install.packages(dplyr)
install.packages("dplyr")
head(ds)
str(ds)
agricultureLogical <- data$ACR==3 & data$AGS==6
agricultureLogical <- ds$ACR==3 & ds$AGS==6
which(agricultureLogical[1:3])
which(agricultureLogical)[1:3]
library(jpeg)
install.packages("jpeg")
library(jpeg)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", destfile=week3question2.jpeg, method="curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", destfile="week3question2.jpeg", method="curl")
pict <- readJPEG(week3question2.jpeg, native="TRUE")
pict <- readJPEG("week3question2.jpeg", native="TRUE")
quantile(pict)
?quantile
quantile(pict, probs=seq(0.3,0.8))
gdp <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", method="curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile="week3question3", method="curl")
gdp <- read.csv("week3question3")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", destfile="week3question3-1", method="curl")
edu <- read.csv("week3question3-1")
str(merge)
str(gdp)
str(edu)
merged <- merge(edu, gdp, by.x=edu$CountryCode, by.y=gdp$X)
merged <- merge(edu, gdp, by.x(edu$CountryCode), by.y(gdp$X))
?merge
merged <- merge(edu, gdp, by.x="CountryCode", by.y="X")
str(merged)
merged[order(rankingGDP, decreasing = TRUE), list(CountryCode, Long.Name.x, Long.Name.y, rankingGDP, GDP)][13]]
merged[order(rankingGDP, decreasing = TRUE)
merged[order(Gross.domestic.product.2012, decreasing = TRUE)[13]
merged[order(Gross.domestic.product.2012, decreasing = TRUE)
13<-merged[order(Gross.domestic.product.2012, decreasing = TRUE)
]
thirteen<-merged[order(Gross.domestic.product.2012, decreasing = TRUE)]
thirteen<-merged[order(merged$Gross.domestic.product.2012, decreasing = TRUE)]
thirteen<-merged(order(merged$Gross.domestic.product.2012, decreasing = TRUE))
thirteen<-(order(merged$Gross.domestic.product.2012, decreasing = TRUE))
head(thirteen, n=14)
str(thirteen)
thirteen<-(order(merged, merged$Gross.domestic.product.2012, decreasing = TRUE))
?order
thirteen<-merged[order(Gross.domestic.product.2012, decreasing = TRUE)]
thirteen<-merged[order("Gross.domestic.product.2012", decreasing = TRUE)]
thirteen[13,]
head(thirteen, n=13)
tail(thirteen)
heard(merged)
head(merged)
str(merged)
thirteen<-merged[order(merged$Gross.domestic.product.2012, decreasing = TRUE)]
quit()
# Set working directory
setwd('./Exploratory_Data_Analysis')
# Download file if it doesn't already exist
data <- 'https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip'
local.data <- './da_project2.zip'
if (! file.exists(local.data)) {
download.file(data,
destfile = local.data, method = 'curl')
}
# Unzip local data
if (! file.exists(local.data)) {
unzip(local.data)
}
# Set working directory
setwd('./Coursera/Exploratory_Data_Analysis')
# Download file if it doesn't already exist
data <- 'https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip'
local.data <- 'ExDA_project2.zip'
if (! file.exists(local.data)) {
download.file(data,
destfile = local.data, method = 'curl')
}
# Unzip local data
if (! file.exists(local.data)) {
unzip(local.data)
}
# Unzip local data
if (file.exists(local.data)) {
unzip(local.data)
}
# Remove archive
file.remove(localdata)
file.remove('localdata')
file.remove(local.data)
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
Totals <- aggregate(Emissions ~ year, NEI, sum)
png('plot1.png')
barplot(height=Totals$Emissions, names.arg=Totals$year,
xlab="Year", ylab=Emissions('total PM'[2]*' emission'),
main="Total Emissions per Year"
)
dev.off()
Totals <- aggregate(Emissions ~ year, NEI, sum)
png('plot1.png')
barplot(height=Totals$Emissions, names.arg=Totals$year,
xlab="Year", ylab="Emissions",
main="Total Emissions per Year"
)
dev.off()
## Subset by Baltimore
baltimore <- NEI[NEI$fips=="24510",]
## Aggregate Baltimore's emissions
aggBaltimore <- aggregate(Emissions ~ year, baltimore,sum)
png("plot2.png")
barplot(
aggBaltimore$Emissions,
names.arg=aggBaltimore$year,
xlab="Year",
ylab="Emissions",
main="Total Baltimore Emissions"
)
dev.off()
library(ggplot2)
png("plot3.png")
BaltimorePlot <- ggplot(baltimore,aes(factor(year),Emissions,fill=type)) +
geom_bar(stat="identity") +
labs(x="year", y="Emissions") +
labs(title=expression("Baltimore Emissions by Source Type"))
dev.off()
library(ggplot2)
BaltimorePlot <- ggplot(baltimore,aes(factor(year),Emissions,fill=type)) +
geom_bar(stat="identity") +
labs(x="year", y="Emissions") +
labs(title=expression("Baltimore Emissions by Source Type"))
dev.copy(png,"plot3.png")
dev.off()
library(ggplot2)
BaltimorePlot <- ggplot(baltimore,aes(factor(year),Emissions,fill=type)) +
geom_bar(stat="identity") +
labs(x="year", y="Emissions") +
labs(title=expression("Baltimore Emissions by Source Type"))
BaltimorePlot
dev.copy(png,"plot3.png")
dev.off()
library(ggplot2)
BaltimorePlot <- ggplot(baltimore,aes(factor(year),Emissions,fill=type)) +
geom_bar(stat="identity") +
facet_grid(.~type) +
labs(x="year", y="Emissions") +
labs(title=expression("Baltimore Emissions by Source Type"))
BaltimorePlot
dev.copy(png,"plot3.png")
dev.off()
combustion <- grepl("comb", SCC$SCC.Level.One, ignore.case=TRUE)
coal <- grepl("coal", SCC$SCC.Level.Four, ignore.case=TRUE)
coalCombustion <- (combustion & coal)
combustionSCC <- SCC[coalCombustion,]$SCC
combustionNEI <- NEI[NEI$SCC %in% combustionSCC,]
## Plot
library(ggplot2)
CCPlot <- ggplot(combustionNEI,aes(factor(year),Emissions)) +
geom_bar(stat="identity") +
labs(x="year", y="Emissions") +
labs(title="US Coal Combustion"))
CCPlot
dev.copy(png,"plot4.png")
dev.off()
library(ggplot2)
CCPlot <- ggplot(combustionNEI,aes(factor(year),Emissions)) +
geom_bar(stat="identity") +
labs(x="year", y="Emissions") +
labs(title="US Coal Combustion")
CCPlot
dev.copy(png,"plot4.png")
dev.off()
library(ggplot2)
CCPlot <- ggplot(combustionNEI,aes(factor(year),Emissions)) +
geom_bar(stat="identity") +
labs(x="year", y="Emissions") +
labs(title="US Coal Combustion")
CCPlot
dev.copy(png,"plot4.png")
dev.off()
Baltimore <- NEI[(NEI$fips=="24510") & (NEI$type=="ON-ROAD"),]
BaltimoreAgg <- aggregate(Emissions ~ year, data=Baltimore, FUN=sum)
## Plot
library(ggplot2)
BaltV <- ggplot(BaltimoreAgg, aes(factor(year), Emissions)) +
geom_bar(stat="identity") +
labs(x="year", y="Emissions") +
ggtitle("Motor Vehicle Emissions for Baltimore")
BaltV
dev.copy(png,"plot5.png")
dev.off()
## Subset by Baltimore
baltimore <- NEI[NEI$fips=="24510",]
## Aggregate Baltimore's emissions
aggBaltimore <- aggregate(Emissions ~ year, baltimore,sum)
## Plot
library(ggplot2)
BaltimorePlot <- ggplot(baltimore,aes(factor(year),Emissions,fill=type)) +
geom_bar(stat="identity") +
facet_grid(.~type) +
labs(x="year", y="Emissions") +
labs(title=expression("Baltimore Emissions by Source Type"))
BaltimorePlot
dev.copy(png,"plot3.png")
dev.off()
## Subset by Baltimore
baltimore <- NEI[NEI$fips=="24510",]
## Plot
library(ggplot2)
BaltimorePlot <- ggplot(baltimore,aes(factor(year),Emissions,fill=type)) +
geom_bar(stat="identity") +
facet_grid(.~type) +
labs(x="year", y="Emissions") +
labs(title=expression("Baltimore Emissions by Source Type"))
BaltimorePlot
dev.copy(png,"plot3.png")
dev.off()
Baltimore_LA <- NEI[((NEI$fips=="24510") | (NEI$fips=="06037"))  & (NEI$type=="ON-ROAD"),]
Baltimore_LA_Agg <- aggregate(Emissions ~ year, data=Baltimore_LA, FUN=sum)
## Plot
library(ggplot2)
Baltimore_LA_Plot <- ggplot(Baltimore_LA_Agg,aes(factor(year),Emissions,fill=type)) +
geom_bar(stat="identity") +
facet_grid(.~city) +
labs(x="year", y="Emissions") +
labs(title=expression("Baltimore and LA Emissions"))
Baltimore_LA_Plot
dev.copy(png,"plot6.png")
dev.off()
head(Baltimore_LA_Agg)
head(Baltimore_LA)
## Get motor vehicle Baltimore and LA emissions
Baltimore_LA <- NEI[((NEI$fips=="24510") | (NEI$fips=="06037"))  & (NEI$type=="ON-ROAD"),]
Baltimore_LA_Agg <- aggregate(Emissions ~ year, data=Baltimore_LA, FUN=sum)
## Plot
library(ggplot2)
Baltimore_LA_Plot <- ggplot(Baltimore_LA,aes(factor(year),Emissions,fill=type)) +
geom_bar(stat="identity") +
facet_grid(.~fips) +
labs(x="year", y="Emissions") +
labs(title=expression("Baltimore and LA Emissions"))
Baltimore_LA_Plot
dev.copy(png,"plot6.png")
dev.off()
## Get motor vehicle Baltimore and LA emissions
Baltimore_LA <- NEI[((NEI$fips=="24510") | (NEI$fips=="06037"))  & (NEI$type=="ON-ROAD"),]
Baltimore_LA_Agg <- aggregate(Emissions ~ year, data=Baltimore_LA, FUN=sum)
## Plot
library(ggplot2)
Baltimore_LA_Plot <- ggplot(Baltimore_LA,aes(factor(year))) +
geom_bar(stat="identity") +
facet_grid(.~fips) +
labs(x="year", y="Emissions") +
labs(title=expression("Baltimore and LA Emissions"))
Baltimore_LA_Plot
dev.copy(png,"plot6.png")
dev.off()
## Get motor vehicle Baltimore and LA emissions
Baltimore_LA <- NEI[((NEI$fips=="24510") | (NEI$fips=="06037"))  & (NEI$type=="ON-ROAD"),]
Baltimore_LA_Agg <- aggregate(Emissions ~ year, data=Baltimore_LA, FUN=sum)
## Plot
library(ggplot2)
Baltimore_LA_Plot <- ggplot(Baltimore_LA,aes(factor(year),Emissions) +
geom_bar(stat="identity") +
facet_grid(.~fips) +
labs(x="year", y="Emissions") +
labs(title=expression("Baltimore and LA Emissions"))
Baltimore_LA_Plot
dev.copy(png,"plot6.png")
dev.off()
## Get motor vehicle Baltimore and LA emissions
Baltimore_LA <- NEI[((NEI$fips=="24510") | (NEI$fips=="06037"))  & (NEI$type=="ON-ROAD"),]
Baltimore_LA_Agg <- aggregate(Emissions ~ year, data=Baltimore_LA, FUN=sum)
## Plot
library(ggplot2)
Baltimore_LA_Plot <- ggplot(Baltimore_LA,aes(factor(year),Emissions) +
geom_bar(stat="identity") +
facet_grid(.~fips) +
labs(x="year", y="Emissions") +
labs(title="Baltimore and LA Emissions")
Baltimore_LA_Plot
dev.copy(png,"plot6.png")
dev.off()
Baltimore_LA <- NEI[((NEI$fips=="24510") | (NEI$fips=="06037"))  & (NEI$type=="ON-ROAD"),]
Baltimore_LA_Agg <- aggregate(Emissions ~ year, data=Baltimore_LA, FUN=sum)
## Plot
library(ggplot2)
Baltimore_LA_Plot <- ggplot(Baltimore_LA,aes(factor(year),Emissions) +
geom_bar(stat="identity") +
facet_grid(.~fips) +
labs("year", "Emissions") +
ggtitle("Baltimore and LA Emissions")
Baltimore_LA_Plot
dev.copy(png,"plot6.png")
dev.off()
Baltimore_LA <- NEI[((NEI$fips=="24510") | (NEI$fips=="06037"))  & (NEI$type=="ON-ROAD"),]
Baltimore_LA_Agg <- aggregate(Emissions ~ year, data=Baltimore_LA, FUN=sum)
## Plot
library(ggplot2)
Baltimore_LA_Plot <- ggplot(Baltimore_LA,aes(factor(year),Emissions)) +
geom_bar(stat="identity") +
facet_grid(.~fips) +
labs("year", "Emissions") +
ggtitle("Baltimore and LA Emissions")
Baltimore_LA_Plot
dev.copy(png,"plot6.png")
dev.off()
## Plot
library(ggplot2)
Baltimore_LA_Plot <- ggplot(Baltimore_LA,aes(factor(year),Emissions)) +
geom_bar(stat="identity") +
facet_grid(.~fips) +
labs(x="year", y="Emissions") +
ggtitle("Baltimore and LA Emissions")
Baltimore_LA_Plot
dev.copy(png,"plot6.png")
dev.off()
## Plot
library(ggplot2)
Baltimore_LA_Plot <- ggplot(Baltimore_LA,aes(factor(year),Emissions,color=fips)) +
geom_bar(stat="identity") +
scale_color_hue(labels=c("Baltimore","Los Angeles")) +
labs(x="year", y="Emissions") +
ggtitle("Baltimore and LA Emissions")
Baltimore_LA_Plot
dev.copy(png,"plot6.png")
dev.off()
## Plot
library(ggplot2)
Baltimore_LA_Plot <- ggplot(Baltimore_LA,aes(factor(year),Emissions,fill=fips)) +
geom_bar(stat="identity") +
scale_color_hue(labels=c("Baltimore","Los Angeles")) +
labs(x="year", y="Emissions") +
ggtitle("Baltimore and LA Emissions")
Baltimore_LA_Plot
dev.copy(png,"plot6.png")
dev.off()
library(ggplot2)
Baltimore_LA_Plot <- ggplot(Baltimore_LA,aes(factor(year),Emissions,fill=fips)) +
geom_bar(stat="identity") +
labels=c("Baltimore","Los Angeles") +
labs(x="year", y="Emissions") +
ggtitle("Baltimore and LA Emissions")
Baltimore_LA_Plot
dev.copy(png,"plot6.png")
dev.off()
## Plot
library(ggplot2)
Baltimore_LA_Plot <- ggplot(Baltimore_LA,aes(factor(year),Emissions)) +
geom_bar(stat="identity") +
facet_grid(.~fips) +
labs(x="year", y="Emissions") +
ggtitle("Baltimore and LA Emissions")
Baltimore_LA_Plot
dev.copy(png,"plot6.png")
dev.off()
head(Baltimore_LA_Agg)
head(Baltimore_LA)
Baltimore_LA$fips=="24510" <- paste(Baltimore_LA$city, "Baltimore", sep="")
Baltimore_LA[Baltimore_LA$fips=="24510"] <- paste(Baltimore_LA[Baltimore_LA$city], "Baltimore", sep="")
Baltimore_LA[Baltimore_LA$fips=="24510"] <- paste(Baltimore_LA$city, "Baltimore", sep="")
Baltimore_LA[(Baltimore_LA$fips=="24510")] <- paste(Baltimore_LA$city, "Baltimore", sep="")
Baltimore_LA[(Baltimore_LA$fips=="24510")] <- paste(Baltimore_LA$city, "Baltimore")
paste0(Baltimore_LA$fips=="24510",Baltimore_LA$city=="Baltimore", sep="")
head(Baltimore_LA)
Baltimore_LA <- paste0(Baltimore_LA$fips=="24510",Baltimore_LA$city=="Baltimore", sep="")
head(Baltimore_LA)
Baltimore_LA <- NEI[((NEI$fips=="24510") | (NEI$fips=="06037"))  & (NEI$type=="ON-ROAD"),]
## Adjust names
Baltimore_LA <- paste0([Baltimore_LA$fips=="24510",],[Baltimore_LA$city=="Baltimore",], sep="")
Baltimore_LA <- paste0(Baltimore_LA[Baltimore_LA$fips=="24510",],Baltimore_LA[Baltimore_LA$city=="Baltimore",], sep="")
head(Baltimore_LA)
Baltimore_LA <- NEI[((NEI$fips=="24510") | (NEI$fips=="06037"))  & (NEI$type=="ON-ROAD"),]
Baltimore <- NEI[((NEI$fips=="24510") & (NEI$type=="ON-ROAD"),]
Baltimore$Location <- ["Baltimore",]
LA <- NEI[((NEI$fips=="06037"))  & (NEI$type=="ON-ROAD"),]
LA$Location <- ["Los Angeles",]
Baltimore <- NEI[((NEI$fips=="24510") & (NEI$type=="ON-ROAD"),]
Baltimore$Location <- "Baltimore"
LA <- NEI[((NEI$fips=="06037"))  & (NEI$type=="ON-ROAD"),]
LA$Location <- "Los Angeles"
Baltimore <- NEI[((NEI$fips=="24510") & (NEI$type=="ON-ROAD"),]
Baltimore$Location <- "Baltimore"
LA <- NEI[((NEI$fips=="06037"))  & (NEI$type=="ON-ROAD"),]
LA$Location <- "Los Angeles"
Baltimore <- NEI[(NEI$fips=="24510") & (NEI$type=="ON-ROAD"),]
Baltimore$Location <- "Baltimore"
LA <- NEI[(NEI$fips=="06037") & (NEI$type=="ON-ROAD"),]
LA$Location <- "Los Angeles"
head(Baltimore)
head(LA)
Baltimore_LA <- rbind(Baltimore,LA)
head(Baltimore_LA)
tail(Baltimore_LA)
Baltimore <- NEI[(NEI$fips=="24510") & (NEI$type=="ON-ROAD"),]
Baltimore$Location <- "Baltimore"
LA <- NEI[(NEI$fips=="06037") & (NEI$type=="ON-ROAD"),]
LA$Location <- "Los Angeles"
Baltimore_LA <- rbind(Baltimore,LA)
## Plot
library(ggplot2)
Baltimore_LA_Plot <- ggplot(Baltimore_LA,aes(factor(year),Emissions)) +
geom_bar(stat="identity") +
facet_grid(.~Location) +
labs(x="year", y="Emissions") +
ggtitle("Baltimore and LA Emissions")
Baltimore_LA_Plot
dev.copy(png,"plot6.png")
dev.off()
## Plot
library(ggplot2)
Baltimore_LA_Plot <- ggplot(Baltimore_LA,aes(factor(year),Emissions), fill=Location) +
geom_bar(stat="identity") +
facet_grid(.~Location) +
labs(x="year", y="Emissions") +
ggtitle("Baltimore and LA Emissions")
Baltimore_LA_Plot
dev.copy(png,"plot6.png")
dev.off()
## Plot
library(ggplot2)
Baltimore_LA_Plot <- ggplot(Baltimore_LA,aes(factor(year),Emissions,fill=Location)) +
geom_bar(stat="identity") +
facet_grid(.~Location) +
labs(x="year", y="Emissions") +
ggtitle("Baltimore and LA Emissions")
Baltimore_LA_Plot
dev.copy(png,"plot6.png")
dev.off()
ls()
file.ls()
file.list()
file.ls()
